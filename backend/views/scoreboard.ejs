<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include ./head %>
    <title>Scorecard</title>
    <style>
      body {
        background-color: white;
        background-size: cover;
        background-position: center;
      }
    </style>
  </head>
  <body>
    <header>
      <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Bluffmaster</a>
        <button
          class="navbar-toggler"
          type="button"
          data-toggle="collapse"
          data-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
              <a class="nav-link" href="/"
                >Back <span class="sr-only">(current)</span></a
              >
            </li>
          </ul>
        </div>
      </nav>
    </header>
    <!-- <div class="container-fluid jumbotron">
      <canvas id="bar-chart" width="800" height="450"></canvas>
    </div> -->
    <div
      class="container-fluid"
      align="center"
      style="position: relative; height:auto; width:90%;"
    >
      <canvas id="bar-chart"></canvas>
    </div>

    <script>
      // allScores is returned as string e.g. string = 10,20,40,30,50,70,80,60,90
      var string = "<%- allScores %>";
      // converting string into an array of numbers e.g. totals = [10, 20, 40, 30, 50, 70, 80, 60, 90]
      var totals;
      if (string.length === 0) {
        totals = new Array();
      } else {
        totals = string
          .replace(/, +/g, ",")
          .split(",")
          .map(Number);
      }
      /* converting 1-D array to 2-D array
      e.g. stackData = [[10, 20, 40],
                        [30, 50, 70],
                        [80, 60, 90]]
      */
      var stackData = [];
      while (totals.length) stackData.push(totals.splice(0, 6));
      var questionNosStr = "<%- questionNos %>";
      var questionNos;
      if (questionNosStr.length === 0) {
        questionNos = new Array();
      } else {
        questionNos = questionNosStr
          .replace(/, +/g, ",")
          .split(",")
          .map(Number);
      }
      var stackColors = [
        "#b3d717",
        "#e68d14",
        "#d3707f",
        "#f7c71b",
        "#304678",
        "#d500e4",
        "#cebe7e",
        "#f60457",
        "#17ba6d",
        "#6c7fdf",
        "#c05036",
        "#f03e7b"
      ];
      let dataset = [];
      for (let i = 0; i < stackData.length; i++) {
        dataset.push({
          label: "Question " + questionNos[i],
          backgroundColor: stackColors[i],
          data: stackData[i]
        });
      }
      var ctx = document.getElementById("bar-chart");
      ctx.height = 170;

      new Chart(document.getElementById("bar-chart"), {
        type: "bar",
        data: {
          labels: ["team1", "team2", "team3", "team4", "team5", "team6"],
          datasets: dataset
        },
        options: {
          legend: { display: false },
          title: {
            display: true,
            text: "Total scores of all the teams"
          },
          tooltips: {
            mode: "label",
            callbacks: {
              label: function(tooltipItem, data) {
                let question = data.datasets[tooltipItem.datasetIndex].label;
                let valor =
                  data.datasets[tooltipItem.datasetIndex].data[
                    tooltipItem.index
                  ];
                let total = 0;
                for (let i = 0; i < data.datasets.length; i++)
                  total += data.datasets[i].data[tooltipItem.index];

                // if (tooltipItem.datasetIndex === data.datasets.length - 1)
                //   return "Total : " + total;
                // else "";

                if (tooltipItem.datasetIndex !== data.datasets.length - 1)
                  return question + " : " + valor;
                else return [question + " : " + valor, "Total : " + total];
              }
            }
          },
          responsive: true,
          scales: {
            xAxes: [
              {
                stacked: true // this should be set to make the bars stacked
              }
            ],
            yAxes: [
              {
                stacked: true // this should be set to make the bars stacked
              }
              //   {
              //     ticks: {
              //       stepSize: 10,
              //       startsWithZero: true
              //     }
              //   }
            ]
          }
          // ,
          // plugins: {
          //   datalabels: {
          //     color: "white",
          //     labels: {
          //       title: {
          //         font: {
          //           weight: "bold"
          //         }
          //       }
          //     },
          //     display: true,
          //     align: "center",
          //     anchor: "center"
          //   }
          // }
        }
      });
    </script>
  </body>
</html>
